// This file was generated by counterfeiter
package clifakes

import (
	"sync"

	"code.cloudfoundry.org/diego-stress-tests/cedar/cli"
	"golang.org/x/net/context"
)

type FakeCFClient struct {
	CfStub        func(ctx context.Context, args ...string) ([]byte, error)
	cfMutex       sync.RWMutex
	cfArgsForCall []struct {
		ctx  context.Context
		args []string
	}
	cfReturns struct {
		result1 []byte
		result2 error
	}
	CleanupStub        func(ctx context.Context)
	cleanupMutex       sync.RWMutex
	cleanupArgsForCall []struct {
		ctx context.Context
	}
}

func (fake *FakeCFClient) Cf(ctx context.Context, args ...string) ([]byte, error) {
	fake.cfMutex.Lock()
	fake.cfArgsForCall = append(fake.cfArgsForCall, struct {
		ctx  context.Context
		args []string
	}{ctx, args})
	fake.cfMutex.Unlock()
	if fake.CfStub != nil {
		return fake.CfStub(ctx, args...)
	} else {
		return fake.cfReturns.result1, fake.cfReturns.result2
	}
}

func (fake *FakeCFClient) CfCallCount() int {
	fake.cfMutex.RLock()
	defer fake.cfMutex.RUnlock()
	return len(fake.cfArgsForCall)
}

func (fake *FakeCFClient) CfArgsForCall(i int) (context.Context, []string) {
	fake.cfMutex.RLock()
	defer fake.cfMutex.RUnlock()
	return fake.cfArgsForCall[i].ctx, fake.cfArgsForCall[i].args
}

func (fake *FakeCFClient) CfReturns(result1 []byte, result2 error) {
	fake.CfStub = nil
	fake.cfReturns = struct {
		result1 []byte
		result2 error
	}{result1, result2}
}

func (fake *FakeCFClient) Cleanup(ctx context.Context) {
	fake.cleanupMutex.Lock()
	fake.cleanupArgsForCall = append(fake.cleanupArgsForCall, struct {
		ctx context.Context
	}{ctx})
	fake.cleanupMutex.Unlock()
	if fake.CleanupStub != nil {
		fake.CleanupStub(ctx)
	}
}

func (fake *FakeCFClient) CleanupCallCount() int {
	fake.cleanupMutex.RLock()
	defer fake.cleanupMutex.RUnlock()
	return len(fake.cleanupArgsForCall)
}

func (fake *FakeCFClient) CleanupArgsForCall(i int) context.Context {
	fake.cleanupMutex.RLock()
	defer fake.cleanupMutex.RUnlock()
	return fake.cleanupArgsForCall[i].ctx
}

var _ cli.CFClient = new(FakeCFClient)
